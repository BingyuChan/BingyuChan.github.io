{"meta":{"title":"My Blog","subtitle":"","description":"","author":"BingyuChan","url":"https://BingyuChan.github.io","root":"/"},"pages":[{"title":"Repositories","date":"2021-01-05T09:45:08.148Z","updated":"2021-01-03T15:27:44.457Z","comments":false,"path":"repository/index.html","permalink":"https://bingyuchan.github.io/repository/index.html","excerpt":"","text":""}],"posts":[{"title":"photo","slug":"photo","date":"2021-01-06T04:16:45.000Z","updated":"2021-01-06T04:18:27.080Z","comments":true,"path":"2021/01/06/photo/","link":"","permalink":"https://bingyuchan.github.io/2021/01/06/photo/","excerpt":"","text":"photo","categories":[],"tags":[]},{"title":"Mac和Linux远程连接服务器异常修复","slug":"Mac和Linux远程连接服务器异常修复","date":"2021-01-06T02:57:46.000Z","updated":"2021-01-06T04:11:35.530Z","comments":true,"path":"2021/01/06/Mac和Linux远程连接服务器异常修复/","link":"","permalink":"https://bingyuchan.github.io/2021/01/06/Mac%E5%92%8CLinux%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%82%E5%B8%B8%E4%BF%AE%E5%A4%8D/","excerpt":"","text":"WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!重置阿里云服务器后，使用Mac终端ssh连接服务器时出错，报错如下 12345678910111213@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED! @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!Someone could be eavesdropping on you right now (man-in-the-middle attack)!It is also possible that a host key has just been changed.The fingerprint for the ECDSA key sent by the remote host isSHA256:AC96m2OtIftb2bOHEsIHmPljD+v0Gn0TwzNVowV9Qi8.Please contact your system administrator.Add correct host key in &#x2F;Users&#x2F;cby&#x2F;.ssh&#x2F;known_hosts to get rid of this message.Offending ECDSA key in &#x2F;Users&#x2F;cby&#x2F;.ssh&#x2F;known_hosts:15ECDSA host key for 101.37.157.4 has changed and you have requested strict checking.Host key verification failed. 解决措施如下看到日志中有一句 1Add correct host key in &#x2F;Users&#x2F;cby&#x2F;.ssh&#x2F;known_hosts to get rid of this message. 以编辑器的方式进入 ~/.ssh/known_hosts 此文件 1vim ~&#x2F;.ssh&#x2F;known_hosts 找到与服务器相对应ip的行，删除此行即可","categories":[],"tags":[]},{"title":"基于ECS搭建云博客","slug":"基于ECS搭建云博客","date":"2021-01-05T10:34:23.000Z","updated":"2021-01-05T10:34:42.968Z","comments":true,"path":"2021/01/05/基于ECS搭建云博客/","link":"","permalink":"https://bingyuchan.github.io/2021/01/05/%E5%9F%BA%E4%BA%8EECS%E6%90%AD%E5%BB%BA%E4%BA%91%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"安装Apache HTTP12yum -y install httpd httpd-manual mod_ssl mod_perl mod_auth_mysqlsystemctl start httpd.service 安装并启动MySQL12345678910wget http:&#x2F;&#x2F;dev.mysql.com&#x2F;get&#x2F;mysql57-community-release-el7-10.noarch.rpmyum -y install mysql57-community-release-el7-10.noarch.rpmyum -y install mysql-community-serversystemctl start mysqld.servicesystemctl status mysqld.servicegrep &quot;password&quot; &#x2F;var&#x2F;log&#x2F;mysqld.logmysql -uroot -pALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;NewPassWord1.&#39;;create database wordpress; show databases; 安装php123yum -y install php php-mysql gd php-gd gd-devel php-xml php-common php-mbstring php-ldap php-pear php-xmlrpc php-imapecho &quot;&lt;?php phpinfo(); ?&gt;&quot; &gt; &#x2F;var&#x2F;www&#x2F;html&#x2F;phpinfo.phpsystemctl restart httpd wordpress安装配置1234567891011121314yum -y install wordpress# 进入&#x2F;usr&#x2F;share&#x2F;wordpress目录cd &#x2F;usr&#x2F;share&#x2F;wordpress # 修改路径。 ln -snf &#x2F;etc&#x2F;wordpress&#x2F;wp-config.php wp-config.php # 查看修改后的目录结构。 ll# 在Apache的根目录&#x2F;var&#x2F;www&#x2F;html下，创建一个wp-blog文件夹mkdir &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog mv * &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;sed -i &#39;s&#x2F;database_name_here&#x2F;wordpress&#x2F;&#39; &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;wp-config.php sed -i &#39;s&#x2F;username_here&#x2F;root&#x2F;&#39; &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;wp-config.php sed -i &#39;s&#x2F;password_here&#x2F;NewPassWord1.&#x2F;&#39; &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;wp-config.phpcat -n &#x2F;var&#x2F;www&#x2F;html&#x2F;wp-blog&#x2F;wp-config.phpsystemctl restart httpd","categories":[],"tags":[]},{"title":"Java面试指南","slug":"Java面试指南","date":"2021-01-03T07:41:45.000Z","updated":"2021-01-05T15:38:14.431Z","comments":true,"path":"2021/01/03/Java面试指南/","link":"","permalink":"https://bingyuchan.github.io/2021/01/03/Java%E9%9D%A2%E8%AF%95%E6%8C%87%E5%8D%97/","excerpt":"","text":"Java基础Java和JavaScript区别1.不同公司，Java原Sun公司开发；2.Java 前身Oak，JS前身LiveScript；3.Java面向对象，JS基于对象和事件驱动；4.Java执行前需编译，JS解释运行；5.Java强类型变量检查，变量编译前必须声明，JS弱类型变量检查，变量使用前可不作声明； Java8新特性支持函数式编程，新的JavaScript引擎，新的日期API，新的Stream API等。Lambda表达式、方法引用、默认方法、新工具、Stream API、Date Time API、Optional类、Nashorn、JavaScript引擎。https://www.runoob.com/java/java8-new-features.html Lambda表达式优点优： 简洁； 便于用于并行计算；缺： 若不用于并行，效率不如for； 不易调试； 锁机制悲观锁适用于写多的场景先取锁再访问，总是假设最坏的情况，每次读取数据时默认其他线程会更改数据。分共享锁和排他锁。 共享锁(读锁)：多个事务对同一数据共享一把锁，都能访问，只读不可修改； 排他锁(写锁)：一个事务获取一个数据行的排他锁，其他事务不能获取该行其他锁，排他锁对数据可读可改。具体实现（依靠数据库的锁机制）： 对记录改前先加排他锁； 若加锁失败，继续等待或抛异常； 加锁成功，对数据进行修改，事务完成后解锁； 期间若其他事务妄图对该数据加锁，则suspend或抛异常。mysql中InnoDB，时用悲观锁时需关闭autocommit（set autocommit=0），否则执行一个更新后立刻提交。1234begin;&#x2F;&#x2F;0.开始事务select quantity from items where id&#x3D;1 for update;&#x2F;&#x2F;1.查询库存，for update加锁update items set quantity&#x3D;2 where id&#x3D;1;&#x2F;&#x2F;2.修改库存commit;&#x2F;&#x2F;3.提交事务 *InnoDB默认行级锁，行级锁基于索引，若SQL语句用不到索引，不会使用行级锁，会使用表级锁，将整张表锁住。 乐观锁（适用于多写场景）线程提交前根据版本进行冲突检测。冲突检测、数据更新。版本号控制：数据表中加version字段，当数据被修改时+1。 123#CAS（compare and swap）select quantity from items where id&#x3D;1;&#x2F;&#x2F;1.查询库存，quantity&#x3D;3update items set quantity&#x3D;2 where id&#x3D;1 and quantity&#x3D;3;&#x2F;&#x2F;2.修改为2 *会出现ABA问题；线程1、2同时取，库存都为3，thread 1将库存改为2，thread 2将库存改为3，判定thread 1CAS成功。解决ABA，需加version字段。高并发下，需更改乐观锁粒度，提高吞吐率。 IO包 InputStream、OutputStream、Reader、Writer 4个抽象类派生 文件File、管道Piped、缓冲Buffered、对象化序列Object、基本数据类型Data、转化控制InputStreamReader/OutputStreamWriter、数组Byte/Char、打印Print 有字节流后为何还要字符流？ANS：字符流是由Java虚拟机将字节转换而来，过程非常耗时、若不知道编码类型更容易出现乱码。故I/O提供操作字符的接口。音频、图片等媒体文件用字节流；字符等用字符流。 BIO，NIO，AIO区别BIO（Blocking I/O）同步阻塞I/O，数据读写必须阻塞在一个线程。简单；性能和可靠性不好，适合低负载、低并发。NIO（Non-blocking/New I/O）同步非阻塞I/O，Java 1.4中引入。支持面向缓冲的、基于通道的I/O，适合高负载、高并发。AIO（Asynchronous I/O）Java 7中引入，异步非阻塞。 JVM类加载器分几种？引导类加载器、自定义加载器（扩展类加载器、系统类加载器、用户自定义加载器）继承于ClassLoader。 如何看待？相互间关系？双亲委派机制？沙箱模型？类加载过程？加载阶段、链接阶段、初始化阶段。 每个阶段都做什么？垃圾回收机制（算法）？各垃圾回收器特点与区别？各种JVMSun Classic VM –&gt; 解释型HotSpot VM（Sun公司） 面试默认BEA的JRockit –&gt; 不含解释器，运行于服务器端，JMCIBM的J9Graal VM –&gt; 2018年。Run Programs Faster Anywhere","categories":[],"tags":[]}],"categories":[],"tags":[]}